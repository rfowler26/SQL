# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL.

#Created the Table:
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

# I determined who the Top 15 artists are by popularity
SELECT artist_name
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 15

# Then I determined the avg danceability, and energy by artist and track.
SELECT (artist_name),track_name, AVG(danceability), AVG(energy)
FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name

# Determined the shortest song
SELECT artist_name, track_name
FROM BIT_DB.Spotifydata
ORDER BY duration_ms asc
LIMIT 1

# Categorized each song by slow, medium, or fast tempo
SELECT track_name, tempo,
CASE WHEN tempo<100 THEN 'Slow Tempo'
WHEN tempo>= 130 THEN 'Fast Tempo'
ELSE 'Medium Tempo'
END AS Tempo_Pace
FROM BIT_DB.Spotifydata

#Determind how many songs Olivio Rodrigo had in the top 50
SELECT artist_name, Count(track_name) as Songs
FROM BIT_DB.Spotifydata
WHERE artist_name like "%olivia%"

#Then determned the AVG popularity of all her songs
SELECT artist_name, AVG(popularity)
FROM BIT_DB.Spotifydata
WHERE artist_name Like "olivia Rodrigo"

#Determined the top 3 loudest songs 
SELECT artist_name,track_name, loudness
FROM BIT_DB.Spotifydata
Group BY artist_name, track_name
ORDER BY loudness desc
LIMIT 3
